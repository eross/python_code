ticket.query
  array ticket.query(string qstr="status!=closed")

  Perform a ticket query, returning a list of ticket ID's.
  All queries will use stored settings for maximum number of results per
  page and paging options. Use `max=n` to define number of results to
  receive, and use `page=n` to page through larger result sets. Using
  `max=0` will turn off paging and return all results.


ticket.getRecentChanges
  array ticket.getRecentChanges(dateTime.iso8601 since)

  Returns a list of IDs of tickets that have changed since timestamp.


ticket.getAvailableActions
  array ticket.getAvailableActions(int id)

  Deprecated - will be removed. Replaced by `getActions()`.


ticket.getActions
  array ticket.getActions(int id)

  Returns the actions that can be performed on the ticket as a list of
  `[action, label, hints, [input_fields]]` elements, where `input_fields` is
  a list of `[name, value, [options]]` for any required action inputs.


ticket.get
  array ticket.get(int id)

  Fetch a ticket. Returns [id, time_created, time_changed, attributes].


ticket.create
  int ticket.create(string summary, string description, struct attributes={}, boolean notify=False, dateTime.iso8601 when=None)

  Create a new ticket, returning the ticket ID.
  Overriding 'when' requires admin permission.


ticket.update
  array ticket.update(int id, string comment, struct attributes={}, boolean notify=False, string author="", dateTime.iso8601 when=None)

  Update a ticket, returning the new ticket in the same form as
  get(). 'New-style' call requires two additional items in attributes:
  (1) 'action' for workflow support (including any supporting fields
  as retrieved by getActions()),
  (2) '_ts' changetime token for detecting update collisions (as received
  from get() or update() calls).
  ''Calling update without 'action' and '_ts' changetime token is
  deprecated, and will raise errors in a future version.''


ticket.delete
  int ticket.delete(int id)

  Delete ticket with the given id.


ticket.changeLog
  struct ticket.changeLog(int id, int when=0)

  Return the changelog as a list of tuples of the form
  (time, author, field, oldvalue, newvalue, permanent).

  While the other tuple elements are quite self-explanatory,
  the `permanent` flag is used to distinguish collateral changes
  that are not yet immutable (like attachments, currently).
